{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Creates Cassandra Data Migration Task",

  "Parameters" : {

    "StackOutputsArn" : {
      "Type" : "String"
    },

    "ServiceName" : {
      "Type" : "String"
    },

    "ServiceImage" : {
      "Type" : "String"
    },

    "ServiceVersion" : {
      "Type" : "String"
    }
  },

  "Resources" : {

    "StockDynamoDBTable" : {
      "Type" : "AWS::DynamoDB::Table",
      "Properties" : {
        "AttributeDefinitions" : [
          {
            "AttributeName" : "id",
            "AttributeType" : "S"
          }
        ],
        "KeySchema" : [
          {
            "AttributeName" : "id",
            "KeyType" : "HASH"
          }
        ],
        "ProvisionedThroughput" : {
          "ReadCapacityUnits" : "25",
          "WriteCapacityUnits" : "25"
        }
      }
    },

    "StockDataDynamoDBTable" : {
      "Type" : "AWS::DynamoDB::Table",
      "Properties" : {
        "AttributeDefinitions" : [
          {
            "AttributeName" : "id",
            "AttributeType" : "S"
          }
        ],
        "KeySchema" : [
          {
            "AttributeName" : "id",
            "KeyType" : "HASH"
          }
        ],
        "ProvisionedThroughput" : {
          "ReadCapacityUnits" : "25",
          "WriteCapacityUnits" : "25"
        }
      }
    },

    "CompanyDynamoDBTable" : {
      "Type" : "AWS::DynamoDB::Table",
      "Properties" : {
        "AttributeDefinitions" : [
          {
            "AttributeName" : "id",
            "AttributeType" : "S"
          },
          {
            "AttributeName" : "stock_id",
            "AttributeType" : "S"
          }
        ],
        "KeySchema" : [
          {
            "AttributeName" : "id",
            "KeyType" : "HASH"
          }
        ],
        "GlobalSecondaryIndexes" : [
          {
            "IndexName" : "stock_id-index",
            "KeySchema" : [
              {
                "AttributeName" : "stock_id",
                "KeyType" : "HASH"
              }
            ],
            "Projection" : {
              "ProjectionType" : "ALL"
            },
            "ProvisionedThroughput" : {
              "ReadCapacityUnits" : "25",
              "WriteCapacityUnits" : "25"
            }
          }
        ],
        "ProvisionedThroughput" : {
          "ReadCapacityUnits" : "25",
          "WriteCapacityUnits" : "25"
        }
      }
    },

    "CompanyDataDynamoDBTable" : {
      "Type" : "AWS::DynamoDB::Table",
      "Properties" : {
        "AttributeDefinitions" : [
          {
            "AttributeName" : "id",
            "AttributeType" : "S"
          }
        ],
        "KeySchema" : [
          {
            "AttributeName" : "id",
            "KeyType" : "HASH"
          }
        ],
        "ProvisionedThroughput" : {
          "ReadCapacityUnits" : "25",
          "WriteCapacityUnits" : "25"
        }
      }
    },

    "Registry": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "registry"
      }
    },

    "Kibana": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "kibana"
      }
    },

    "Network": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "network"
      }
    },

    "Environment": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "environment"
      }
    },

    "ECS": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "ecs"
      }
    },

    "LoggingGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": "5"
      }
    },

    "DataMigrationBucketBucket" : {
      "Type" : "AWS::S3::Bucket",
      "Properties" : {
        "AccessControl" : "Private"
      }
    },

    "AddPolicyToECSIAMInstanceRole" : {
      "Type" : "AWS::IAM::Policy",
      "Properties" : {
        "PolicyName" : "CassandraMigrateRestrictedAccessDynamoDB",
        "PolicyDocument" : {
          "Version" : "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [ "dynamodb:*" ],
              "Resource": [
                { "Fn::Join" : ["", [
                "arn:aws:dynamodb:",
                { "Ref" : "AWS::Region" }, ":",
                { "Ref" : "AWS::AccountId" },":table/",
                { "Ref" : "StockDynamoDBTable" }
                ]] },
                { "Fn::Join" : ["", [
                "arn:aws:dynamodb:",
                { "Ref" : "AWS::Region" }, ":",
                { "Ref" : "AWS::AccountId" },":table/",
                { "Ref" : "StockDataDynamoDBTable" }
                ]] },
                { "Fn::Join" : ["", [
                "arn:aws:dynamodb:",
                { "Ref" : "AWS::Region" }, ":",
                { "Ref" : "AWS::AccountId" },":table/",
                { "Ref" : "CompanyDynamoDBTable" }
                ]] },
                { "Fn::Join" : ["", [
                "arn:aws:dynamodb:",
                { "Ref" : "AWS::Region" }, ":",
                { "Ref" : "AWS::AccountId" },":table/",
                { "Ref" : "CompanyDataDynamoDBTable" }
                ]] },
                { "Fn::Join" : ["", [
                "arn:aws:dynamodb:",
                { "Ref" : "AWS::Region" }, ":",
                { "Ref" : "AWS::AccountId" },":table/",
                { "Ref" : "StockDynamoDBTable" },
                "/*"
                ]] },
                { "Fn::Join" : ["", [
                "arn:aws:dynamodb:",
                { "Ref" : "AWS::Region" }, ":",
                { "Ref" : "AWS::AccountId" },":table/",
                { "Ref" : "StockDataDynamoDBTable" },
                "/*"
                ]] },
                { "Fn::Join" : ["", [
                "arn:aws:dynamodb:",
                { "Ref" : "AWS::Region" }, ":",
                { "Ref" : "AWS::AccountId" },":table/",
                { "Ref" : "CompanyDynamoDBTable" },
                "/*"
                ]] },
                { "Fn::Join" : ["", [
                "arn:aws:dynamodb:",
                { "Ref" : "AWS::Region" }, ":",
                { "Ref" : "AWS::AccountId" },":table/",
                { "Ref" : "CompanyDataDynamoDBTable" },
                "/*"
                ]] }
              ]
            },
            {
              "Action": [
                "s3:*"
              ],
              "Effect": "Allow",
              "Resource": [
                { "Fn::Join" : ["", [
                  "arn:aws:s3:::" , { "Ref" : "DataMigrationBucketBucket" } ]
                ] },
                { "Fn::Join" : ["", [
                  "arn:aws:s3:::" , { "Ref" : "DataMigrationBucketBucket" }, "/*" ]
                ] }
              ]
            }
          ]
        },
        "Roles" : [ { "Fn::GetAtt": [ "ECS", "InstanceRole" ] } ]
      }
    },


    "MigrateInstrumentTaskDefinition" : {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties" : {
        "ContainerDefinitions" : [
          {
            "Name" : { "Fn::Join" : ["_", ["cloudwatch", { "Ref" : "ServiceName" }]] },
            "Image" : "stockflare/logger",
            "Memory" : "256",
            "Cpu" : "128",
            "Environment" : [
              {
                "Name" : "AWS_REGION",
                "Value" : { "Ref" : "AWS::Region" }
              },
              {
                "Name" : "CLOUDWATCH_LOG_GROUP",
                "Value" : { "Ref" : "LoggingGroup" }
              }
            ]
          },
          {
            "Name" : { "Ref" : "ServiceName" },
            "Essential" : "true",
            "Command" : ["broadcast", "rake", "migrate:instrument_api"],
            "Image" : { "Fn::Join" : ["", [
              { "Fn::GetAtt": [ "Registry", "URL" ] }, "/",
              { "Ref" : "ServiceImage" }, ":", { "Ref" : "ServiceVersion" }]]
            },
            "Memory" : "1024",
            "Cpu" : "1024",
            "Links" : [
              { "Fn::Join" : ["_", ["cloudwatch", { "Ref" : "ServiceName" }]] }
            ],
            "Environment" : [
              {
                "Name" : "HOSTED_ZONE",
                "Value" : { "Fn::GetAtt": [ "ECS", "HostedZone" ] }
              },
              {
                "Name" : "LOGGER_TAG",
                "Value" : { "Ref" : "ServiceName" }
              },
              {
                "Name" : "LOGGER_HOSTNAME",
                "Value" : { "Fn::Join" : ["_", ["cloudwatch", { "Ref" : "ServiceName" }]] }
              },
              {
                "Name" : "CSV_DATA_BUCKET",
                "Value" : { "Ref" : "DataMigrationBucketBucket" }
              },
              {
                "Name" : "ODIN_STOCK_TABLE",
                "Value" : { "Ref" : "StockDynamoDBTable" }
              },
              {
                "Name" : "ODIN_COMPANY_TABLE",
                "Value" : { "Ref" : "CompanyDynamoDBTable" }
              },
              {
                "Name" : "ODIN_COMPANY_DATA_TABLE",
                "Value" : { "Ref" : "CompanyDataDynamoDBTable" }
              },
              {
                "Name" : "ODIN_STOCK_DATA_TABLE",
                "Value" : { "Ref" : "StockDataDynamoDBTable" }
              },
              {
                "Name" : "CSV_DATA_FOLDER",
                "Value" : "cassandra_csv"
              },
              {
                "Name" : "AWS_REGION",
                "Value" : { "Ref" : "AWS::Region" }
              }
            ],
            "MountPoints": [
              {
                "SourceVolume": "data",
                "ContainerPath": "/data",
                "ReadOnly": false
              }
            ]
          }
        ],
        "Volumes" : [
          {
            "Name" : "data",
            "Host" : {
              "SourcePath" : "/data"
            }
          }
        ]
      }
    },

    "SubscribeKibanaToLoggingGroup": {
      "Type": "Custom::LogSubscriber",
      "Properties": {
        "ServiceToken": { "Fn::GetAtt": [ "Kibana", "SubscriberArn" ] },
        "LogGroup" : { "Ref" : "LoggingGroup" },
        "Name" : { "Ref" : "ServiceName" },
        "Pattern" : "[..., ip, auth, user, timestamp, request, status >= 200, bytes > 0, response]",
        "Role" : { "Fn::GetAtt": [ "Kibana", "StreamRole" ] },
        "Stream" : { "Fn::GetAtt": [ "Kibana", "Stream" ] },
        "Region" : { "Ref" : "AWS::Region" }
      }
    }

  },

  "Outputs" : {


  }
}
