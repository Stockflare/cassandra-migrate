{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Launches the Instruments API",

  "Parameters" : {

    "StackOutputsArn" : {
      "Type" : "String"
    },

    "ServiceName" : {
      "Type" : "String"
    },

    "ServiceImage" : {
      "Type" : "String"
    },

    "ServiceVersion" : {
      "Type" : "String"
    }
  },

  "Resources" : {

    "StockDynamoDBTable" : {
      "Type" : "AWS::DynamoDB::Table",
      "Properties" : {
        "AttributeDefinitions" : [
          {
            "AttributeName" : "id",
            "AttributeType" : "S"
          }
        ],
        "KeySchema" : [
          {
            "AttributeName" : "id",
            "KeyType" : "HASH"
          }
        ],
        "ProvisionedThroughput" : {
          "ReadCapacityUnits" : "25",
          "WriteCapacityUnits" : "1000"
        }
      }
    },

    "StockDataDynamoDBTable" : {
      "Type" : "AWS::DynamoDB::Table",
      "Properties" : {
        "AttributeDefinitions" : [
          {
            "AttributeName" : "id",
            "AttributeType" : "S"
          }
        ],
        "KeySchema" : [
          {
            "AttributeName" : "id",
            "KeyType" : "HASH"
          }
        ],
        "ProvisionedThroughput" : {
          "ReadCapacityUnits" : "25",
          "WriteCapacityUnits" : "1000"
        }
      }
    },

    "CompanyDynamoDBTable" : {
      "Type" : "AWS::DynamoDB::Table",
      "Properties" : {
        "AttributeDefinitions" : [
          {
            "AttributeName" : "id",
            "AttributeType" : "S"
          },
          {
            "AttributeName" : "stock_id",
            "AttributeType" : "S"
          }
        ],
        "KeySchema" : [
          {
            "AttributeName" : "id",
            "KeyType" : "HASH"
          }
        ],
        "GlobalSecondaryIndexes" : [
          {
            "IndexName" : "stock_id-index",
            "KeySchema" : [
              {
                "AttributeName" : "stock_id",
                "KeyType" : "HASH"
              }
            ],
            "Projection" : {
              "ProjectionType" : "ALL"
            },
            "ProvisionedThroughput" : {
              "ReadCapacityUnits" : "25",
              "WriteCapacityUnits" : "25"
            }
          }
        ],
        "ProvisionedThroughput" : {
          "ReadCapacityUnits" : "25",
          "WriteCapacityUnits" : "25"
        }
      }
    },

    "CompanyDataDynamoDBTable" : {
      "Type" : "AWS::DynamoDB::Table",
      "Properties" : {
        "AttributeDefinitions" : [
          {
            "AttributeName" : "id",
            "AttributeType" : "S"
          }
        ],
        "KeySchema" : [
          {
            "AttributeName" : "id",
            "KeyType" : "HASH"
          }
        ],
        "ProvisionedThroughput" : {
          "ReadCapacityUnits" : "25",
          "WriteCapacityUnits" : "25"
        }
      }
    },

    "Registry": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "registry"
      }
    },

    "Kibana": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "kibana"
      }
    },

    "Network": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "network"
      }
    },

    "Environment": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "environment"
      }
    },

    "ECS": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "ecs"
      }
    },

    "LoggingGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": "5"
      }
    },

    "AddPolicyToECSIAMInstanceRole" : {
      "Type" : "AWS::IAM::Policy",
      "Properties" : {
        "PolicyName" : "ApiInstrumentRestrictedAccessDynamoDB",
        "PolicyDocument" : {
          "Version" : "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Action": [ "dynamodb:*" ],
            "Resource": [
                { "Fn::Join" : ["", [
                "arn:aws:dynamodb:",
                { "Ref" : "AWS::Region" }, ":",
                { "Ref" : "AWS::AccountId" },":table/",
                { "Ref" : "StockDynamoDBTable" }
                ]] },
                { "Fn::Join" : ["", [
                "arn:aws:dynamodb:",
                { "Ref" : "AWS::Region" }, ":",
                { "Ref" : "AWS::AccountId" },":table/",
                { "Ref" : "StockDataDynamoDBTable" }
                ]] },
                { "Fn::Join" : ["", [
                "arn:aws:dynamodb:",
                { "Ref" : "AWS::Region" }, ":",
                { "Ref" : "AWS::AccountId" },":table/",
                { "Ref" : "CompanyDynamoDBTable" }
                ]] },
                { "Fn::Join" : ["", [
                "arn:aws:dynamodb:",
                { "Ref" : "AWS::Region" }, ":",
                { "Ref" : "AWS::AccountId" },":table/",
                { "Ref" : "CompanyDataDynamoDBTable" }
                ]] }
           ]
          }]
        },
        "Roles" : [ { "Fn::GetAtt": [ "ECS", "InstanceRole" ] } ]
      }
    },


    "MigrateInstrumentTaskDefinition" : {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties" : {
        "ContainerDefinitions" : [
          {
            "Name" : { "Fn::Join" : ["_", ["cloudwatch", { "Ref" : "ServiceName" }]] },
            "Image" : "stockflare/logger",
            "Memory" : "256",
            "Cpu" : "128",
            "Environment" : [
              {
                "Name" : "AWS_REGION",
                "Value" : { "Ref" : "AWS::Region" }
              },
              {
                "Name" : "CLOUDWATCH_LOG_GROUP",
                "Value" : { "Ref" : "LoggingGroup" }
              }
            ]
          },
          {
            "Name" : { "Ref" : "ServiceName" },
            "Essential" : "true",
            "Command" : ["broadcast", "rake", "migrate:instrument"],
            "Image" : { "Fn::Join" : ["", [
              { "Fn::GetAtt": [ "Registry", "URL" ] }, "/",
              { "Ref" : "ServiceImage" }, ":", { "Ref" : "ServiceVersion" }]]
            },
            "Memory" : "1024",
            "Cpu" : "1024",
            "Links" : [
              { "Fn::Join" : ["_", ["cloudwatch", { "Ref" : "ServiceName" }]] }
            ],
            "Environment" : [
              {
                "Name" : "HOSTED_ZONE",
                "Value" : { "Fn::GetAtt": [ "ECS", "HostedZone" ] }
              },
              {
                "Name" : "LOGGER_TAG",
                "Value" : { "Ref" : "ServiceName" }
              },
              {
                "Name" : "LOGGER_HOSTNAME",
                "Value" : { "Fn::Join" : ["_", ["cloudwatch", { "Ref" : "ServiceName" }]] }
              },
              {
                "Name" : "TABLE_NAME",
                "Value" : { "Ref" : "InstrumentDynamoDBTable" }
              },
              {
                "Name" : "AWS_REGION",
                "Value" : { "Ref" : "AWS::Region" }
              }
            ],
            "PortMappings" : [
              {
                "ContainerPort" : { "Ref" : "ServicePort" },
                "HostPort" : { "Ref" : "ServicePort" }
              }
            ]
          }
        ]
      }
    },

    "Service": {
      "Type": "AWS::ECS::Service",
      "Properties" : {
        "Cluster": { "Fn::GetAtt": [ "ECS", "ECSCluster" ] },
        "DesiredCount": { "Ref": "DesiredCount" },
        "TaskDefinition" : { "Ref":"ServiceDefinition" },
        "Role" : {"Fn::GetAtt" : ["ServiceRole", "Arn"] },
        "LoadBalancers" : [
          {
            "LoadBalancerName" : { "Ref" : "ElasticLoadBalancer" },
            "ContainerName" : { "Ref" : "ServiceName" },
            "ContainerPort" : { "Ref" : "ServicePort" }
          }
        ]
      }
    },

    "SubscribeKibanaToLoggingGroup": {
      "Type": "Custom::LogSubscriber",
      "Properties": {
        "ServiceToken": { "Fn::GetAtt": [ "Kibana", "SubscriberArn" ] },
        "LogGroup" : { "Ref" : "LoggingGroup" },
        "Name" : { "Ref" : "ServiceName" },
        "Pattern" : "[..., ip, auth, user, timestamp, request, status >= 200, bytes > 0, response]",
        "Role" : { "Fn::GetAtt": [ "Kibana", "StreamRole" ] },
        "Stream" : { "Fn::GetAtt": [ "Kibana", "Stream" ] },
        "Region" : { "Ref" : "AWS::Region" }
      }
    },

    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "Scheme" : "internal",
        "AccessLoggingPolicy" : {
          "EmitInterval" : "60",
          "Enabled" : "true",
          "S3BucketName" : { "Fn::GetAtt": [ "Environment", "LoggingBucket" ] },
          "S3BucketPrefix" : { "Fn::Join" :  ["", ["coreos/", { "Ref" : "ServiceName" }, "/elb" ]] }
        },
        "SecurityGroups" : [ { "Ref" : "LoadBalancerSecurityGroup" } ],
        "Subnets" : [
          { "Fn::GetAtt": [ "Network", "PrivateSubnetA" ] },
          { "Fn::GetAtt": [ "Network", "PrivateSubnetB" ] },
          { "Fn::GetAtt": [ "Network", "PrivateSubnetC" ] }
        ],
        "Listeners" : [
          {
            "LoadBalancerPort" : "80",
            "InstancePort" : { "Ref" : "ServicePort" },
            "Protocol" : "HTTP"
          }
        ],
        "HealthCheck" : {
          "Target" : { "Fn::Join" : ["", ["HTTP:", { "Ref" : "ServicePort" }, "/ping"]] },
          "HealthyThreshold" : "3",
          "UnhealthyThreshold" : "5",
          "Interval" : "20",
          "Timeout" : "10"
        }
      }
    },

    "RequestCountHigh": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription": { "Fn::Base64": { "Fn::Join" : ["", [
          "{",
            "\"service\":\"", { "Ref" : "Service" }, "\",",
            "\"cluster\":\"", { "Fn::GetAtt": [ "ECS", "ECSCluster" ] }, "\"",
          "}"
        ]]}},
        "MetricName": "RequestCount",
        "Namespace": "AWS/ELB",
        "Statistic": "Sum",
        "Period": "300",
        "EvaluationPeriods": "1",
        "ComparisonOperator": "GreaterThanThreshold",
        "Threshold": "500",
        "AlarmActions": [{ "Fn::GetAtt": [ "ECS", "ScalingTopic" ] }],
        "OKActions" : [{ "Fn::GetAtt": [ "ECS", "ScalingTopic" ] }],
        "InsufficientDataActions" : [{ "Fn::GetAtt": [ "ECS", "ScalingTopic" ] }],
        "Dimensions": [{
          "Name": "LoadBalancerName",
          "Value": { "Ref": "ElasticLoadBalancer" }
        }]
      }
    },

    "LoadBalancerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable TCP access on port 80",
        "VpcId" : { "Fn::GetAtt": [ "Network", "VPCId" ] },
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : { "Fn::Join" : ["", ["10.", { "Fn::GetAtt": [ "Network", "VPCSecondOctet" ] }, ".0.0/16"]] } }
        ]
      }
    },

    "LoadBalancerIngressIntoECSServer": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "IpProtocol": "tcp",
        "FromPort": { "Ref" : "ServicePort" },
        "ToPort": { "Ref" : "ServicePort" },
        "SourceSecurityGroupId": { "Ref" : "LoadBalancerSecurityGroup" },
        "GroupId": { "Fn::GetAtt": [ "ECS", "SecurityGroup" ] }
      }
    },

    "ServiceDNSZone" : {
      "Type" : "AWS::Route53::RecordSetGroup",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" :  ["", [{ "Fn::GetAtt": [ "ECS", "HostedZone" ] }, "."]] },
        "RecordSets" : [{
          "Name" : { "Fn::Join" : ["", [{ "Ref" : "ServiceName" }, ".", { "Fn::GetAtt": [ "ECS", "HostedZone" ] }, "."]] },
          "Type" : "A",
          "AliasTarget" : {
            "HostedZoneId" : { "Fn::GetAtt" : ["ElasticLoadBalancer", "CanonicalHostedZoneNameID"] },
            "DNSName" : { "Fn::GetAtt" : ["ElasticLoadBalancer", "DNSName"] }
          }
        }]
      }
    }

  },

  "Outputs" : {

    "Table" : {
      "Description" : "DynamoDB Table Name",
      "Value" : { "Ref" : "InstrumentDynamoDBTable" }
    }

  }
}
